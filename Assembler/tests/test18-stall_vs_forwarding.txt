@This example is taken from the HiP lecture example and is meant to showcase the difference between stall and forwarding

.data

.word 1

.text

loop:		@ stall										| forwarding
mov r3, #3	@ 5, 22										| 5, 17	
ldr r1, [r2]	@ 6, 23										| 6, 18
add r1, r1, #1	@ 10, 27									| 8, 20 (here one mandatory stall is used to get the value from the MA stage)
add r7, r7, #1  @ 11, 28									| 9, 21
str r2, r1	@ 14 (written to operand memory on cycle 13, but left pipeline on 14), 31	| 10, 22
subs r4, r3, r1	@ 15, 32									| 11, 23
add r5, r5, #1  @ 17, 34									| 12, 24
add r7, r7, #1  @ 18, 35									| 13, 25
add r6, r1, r4  @ 19, 36									| 14, 26
jne loop	@ 20, 37									| 15, 27